package tech.pronghorn.http.protocol

//data class MimeType(val typeName: String,
//                    val extensions: Array<String>,
//                    val bytes: ByteArray)
//
//const val potato = MimeType("audio/aac", arrayOf(".aac"), "audio/aac".toByteArray(Charsets.US_ASCII))

enum class CommonMimeTypes(val typeName: String,
                           val extensions: Array<String>,
                           val bytes: ByteArray) {
    AudioAac("audio/aac", arrayOf(".aac"), "audio/aac".toByteArray(Charsets.US_ASCII)),
    AudioOgg("audio/ogg", arrayOf(".oga"), "audio/ogg".toByteArray(Charsets.US_ASCII)),
    AudioWav("audio/x-wav", arrayOf(".wav"), "audio/x-wav".toByteArray(Charsets.US_ASCII)),
    AudioWebm("audio/webm", arrayOf(".weba"), "audio/webm".toByteArray(Charsets.US_ASCII)),
    ApplicationOctetStream("application/octet-stream", arrayOf(".bin"), "application/octet-stream".toByteArray(Charsets.US_ASCII)),
    ApplicationBzip("application/x-bzip", arrayOf(".bz"), "application/x-bzip".toByteArray(Charsets.US_ASCII)),
    ApplicationBzip2("application/x-bzip2", arrayOf(".bz2"), "application/x-bzip2".toByteArray(Charsets.US_ASCII)),
    ApplicationJar("application/java-archive", arrayOf(".jar"), "application/java-archive".toByteArray(Charsets.US_ASCII)),
    ApplicationJavascript("application/javascript", arrayOf(".js"), "application/javascript".toByteArray(Charsets.US_ASCII)),
    ApplicationJson("application/json", arrayOf(".json"), "application/json".toByteArray(Charsets.US_ASCII)),
    ApplicationPdf("application/pdf", arrayOf(".pdf"), "application/pdf".toByteArray(Charsets.US_ASCII)),
    ApplicationRar("application/x-rar-compressed", arrayOf(".rar"), "application/x-rar-compressed".toByteArray(Charsets.US_ASCII)),
    ApplicationTar("application/x-tar", arrayOf(".tar"), "application/x-tar".toByteArray(Charsets.US_ASCII)),
    ApplicationXhtml("application/xhtml+xml", arrayOf(".xhtml"), "application/xhtml+xml".toByteArray(Charsets.US_ASCII)),
    ApplicationXml("application/xml", arrayOf(".xml"), "application/xml".toByteArray(Charsets.US_ASCII)),
    ApplicationZip("application/zip", arrayOf(".zip"), "application/zip".toByteArray(Charsets.US_ASCII)),
    ApplicationSevenZip("application/x-7z-compressed", arrayOf(".7z"), "application/x-7z-compressed".toByteArray(Charsets.US_ASCII)),
    FontTrueType("font/ttf", arrayOf(".ttf"), "font/ttf".toByteArray(Charsets.US_ASCII)),
    FontWoff("font/woff", arrayOf(".woff"), "font/woff".toByteArray(Charsets.US_ASCII)),
    FontWoff2("font/woff2", arrayOf(".woff2"), "font/woff2".toByteArray(Charsets.US_ASCII)),
    ImageGif("image/gif", arrayOf(".gif"), "image/gif".toByteArray(Charsets.US_ASCII)),
    ImageIco("image/x-icon", arrayOf(".ico"), "image/x-icon".toByteArray(Charsets.US_ASCII)),
    ImagePng("image/png", arrayOf(".png"), "image/png".toByteArray(Charsets.US_ASCII)),
    ImageSvg("image/svg+xml", arrayOf(".svg"), "image/svg+xml".toByteArray(Charsets.US_ASCII)),
    ImageTiff("image/tiff", arrayOf(".tiff", ".tif"), "image/tiff".toByteArray(Charsets.US_ASCII)),
    ImageWebm("image/webp", arrayOf(".webp"), "image/webp".toByteArray(Charsets.US_ASCII)),
    ImageJpeg("image/jpeg", arrayOf(".jpg", ".jpeg"), "image/jpeg".toByteArray(Charsets.US_ASCII)),
    TextCss("text/css", arrayOf(".css"), "text/css".toByteArray(Charsets.US_ASCII)),
    TextCsv("text/csv", arrayOf(".csv"), "text/csv".toByteArray(Charsets.US_ASCII)),
    TextHtml("text/html", arrayOf(".html", ".htm"), "text/html".toByteArray(Charsets.US_ASCII)),
    VideoAvi("video/x-msvideo", arrayOf(".avi"), "video/x-msvideo".toByteArray(Charsets.US_ASCII)),
    VideoMpeg("video/mpeg", arrayOf(".mpeg"), "video/mpeg".toByteArray(Charsets.US_ASCII)),
    VideoOgg("video/ogg", arrayOf(".ogv"), "video/ogg".toByteArray(Charsets.US_ASCII)),
    VideoWebm("video/webm", arrayOf(".webm"), "video/webm".toByteArray(Charsets.US_ASCII)),
}
