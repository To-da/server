package tech.pronghorn.http.protocol

enum class HttpResponseCode(val value: Int,
                            val codeName: String,
                            val bytes: ByteArray) {
    Continue(100, "Continue", "100 Continue".toByteArray(Charsets.US_ASCII)),
    SwitchingProtocols(101, "Switching Protocols", "101 Switching Protocols".toByteArray(Charsets.US_ASCII)),
    Processing(102, "Processing", "102 Processing".toByteArray(Charsets.US_ASCII)),
    OK(200, "OK", "200 OK".toByteArray(Charsets.US_ASCII)),
    Created(201, "Created", "201 Created".toByteArray(Charsets.US_ASCII)),
    Accepted(202, "Accepted", "202 Accepted".toByteArray(Charsets.US_ASCII)),
    NonAuthoritativeInformation(203, "Non-Authoritative Information", "203 Non-Authoritative Information".toByteArray(Charsets.US_ASCII)),
    NoContent(204, "No Content", "204 No Content".toByteArray(Charsets.US_ASCII)),
    ResetContent(205, "Reset Content", "205 Reset Content".toByteArray(Charsets.US_ASCII)),
    PartialContent(206, "Partial Content", "206 Partial Content".toByteArray(Charsets.US_ASCII)),
    MultiStatus(207, "Multi-Status", "207 Multi-Status".toByteArray(Charsets.US_ASCII)),
    AlreadyReported(208, "Already Reported", "208 Already Reported".toByteArray(Charsets.US_ASCII)),
    IMUsed(226, "IM Used", "226 IM Used".toByteArray(Charsets.US_ASCII)),
    MultipleChoices(300, "Multiple Choices", "300 Multiple Choices".toByteArray(Charsets.US_ASCII)),
    MovedPermanently(301, "Moved Permanently", "301 Moved Permanently".toByteArray(Charsets.US_ASCII)),
    Found(302, "Found", "302 Found".toByteArray(Charsets.US_ASCII)),
    SeeOther(303, "See Other", "303 See Other".toByteArray(Charsets.US_ASCII)),
    NotModified(304, "Not Modified", "304 Not Modified".toByteArray(Charsets.US_ASCII)),
    UseProxy(305, "Use Proxy", "305 Use Proxy".toByteArray(Charsets.US_ASCII)),
    SwitchProxy(306, "Switch Proxy", "306 Switch Proxy".toByteArray(Charsets.US_ASCII)),
    TemporaryRedirect(307, "Temporary Redirect", "307 Temporary Redirect".toByteArray(Charsets.US_ASCII)),
    PermanentRedirect(308, "Permanent Redirect", "308 Permanent Redirect".toByteArray(Charsets.US_ASCII)),
    BadRequest(400, "Bad Request", "400 Bad Request".toByteArray(Charsets.US_ASCII)),
    Unauthorized(401, "Unauthorized", "401 Unauthorized".toByteArray(Charsets.US_ASCII)),
    PaymentRequired(402, "Payment Required", "402 Payment Required".toByteArray(Charsets.US_ASCII)),
    Forbidden(403, "Forbidden", "403 Forbidden".toByteArray(Charsets.US_ASCII)),
    NotFound(404, "Not Found", "404 Not Found".toByteArray(Charsets.US_ASCII)),
    MethodNotAllowed(405, "Method Not Allowed", "405 Method Not Allowed".toByteArray(Charsets.US_ASCII)),
    NotAcceptable(406, "Not Acceptable", "406 Not Acceptable".toByteArray(Charsets.US_ASCII)),
    ProxyAuthenticationRequired(407, "Proxy Authentication Required", "407 Proxy Authentication Required".toByteArray(Charsets.US_ASCII)),
    RequestTimeout(408, "Request Timeout", "408 Request Timeout".toByteArray(Charsets.US_ASCII)),
    Conflict(409, "Conflict", "409 Conflict".toByteArray(Charsets.US_ASCII)),
    Gone(410, "Gone", "410 Gone".toByteArray(Charsets.US_ASCII)),
    LengthRequired(411, "Length Required", "411 Length Required".toByteArray(Charsets.US_ASCII)),
    PreconditionFailed(412, "Precondition Failed", "412 Precondition Failed".toByteArray(Charsets.US_ASCII)),
    PayloadTooLarge(413, "Payload Too Large", "413 Payload Too Large".toByteArray(Charsets.US_ASCII)),
    URITooLong(414, "URI Too Long", "414 URI Too Long".toByteArray(Charsets.US_ASCII)),
    UnsupportedMediaType(415, "Unsupported Media Type", "415 Unsupported Media Type".toByteArray(Charsets.US_ASCII)),
    RangeNotSatisfiable(416, "Range Not Satisfiable", "416 Range Not Satisfiable".toByteArray(Charsets.US_ASCII)),
    ExpectationFailed(417, "Expectation Failed", "417 Expectation Failed".toByteArray(Charsets.US_ASCII)),
    Imateapot(418, "I'm a teapot", "418 I'm a teapot".toByteArray(Charsets.US_ASCII)),
    MisdirectedRequest(421, "Misdirected Request", "421 Misdirected Request".toByteArray(Charsets.US_ASCII)),
    UnprocessableEntity(422, "Unprocessable Entity", "422 Unprocessable Entity".toByteArray(Charsets.US_ASCII)),
    Locked(423, "Locked", "423 Locked".toByteArray(Charsets.US_ASCII)),
    FailedDependency(424, "Failed Dependency", "424 Failed Dependency".toByteArray(Charsets.US_ASCII)),
    UpgradeRequired(426, "Upgrade Required", "426 Upgrade Required".toByteArray(Charsets.US_ASCII)),
    PreconditionRequired(428, "Precondition Required", "428 Precondition Required".toByteArray(Charsets.US_ASCII)),
    TooManyRequests(429, "Too Many Requests", "429 Too Many Requests".toByteArray(Charsets.US_ASCII)),
    RequestHeaderFieldsTooLarge(431, "Request Header Fields Too Large", "431 Request Header Fields Too Large".toByteArray(Charsets.US_ASCII)),
    UnavailableForLegalReasons(451, "Unavailable For Legal Reasons", "451 Unavailable For Legal Reasons".toByteArray(Charsets.US_ASCII)),
    InternalServerError(500, "Internal Server Error", "500 Internal Server Error".toByteArray(Charsets.US_ASCII)),
    NotImplemented(501, "Not Implemented", "501 Not Implemented".toByteArray(Charsets.US_ASCII)),
    BadGateway(502, "Bad Gateway", "502 Bad Gateway".toByteArray(Charsets.US_ASCII)),
    ServiceUnavailable(503, "Service Unavailable", "503 Service Unavailable".toByteArray(Charsets.US_ASCII)),
    GatewayTimeout(504, "Gateway Timeout", "504 Gateway Timeout".toByteArray(Charsets.US_ASCII)),
    HTTPVersionNotSupported(505, "HTTP Version Not Supported", "505 HTTP Version Not Supported".toByteArray(Charsets.US_ASCII)),
    VariantAlsoNegotiates(506, "Variant Also Negotiates", "506 Variant Also Negotiates".toByteArray(Charsets.US_ASCII)),
    InsufficientStorage(507, "Insufficient Storage", "507 Insufficient Storage".toByteArray(Charsets.US_ASCII)),
    LoopDetected(508, "Loop Detected", "508 Loop Detected".toByteArray(Charsets.US_ASCII)),
    NotExtended(510, "Not Extended", "510 Not Extended".toByteArray(Charsets.US_ASCII)),
    NetworkAuthenticationRequired(511, "Network Authentication Required", "511 Network Authentication Required".toByteArray(Charsets.US_ASCII)),
}
